/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.Users;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-10-14T20:51:39.919Z[GMT]")
@Api(value = "users", description = "the users API")
public interface UsersApi {

    @ApiOperation(value = "GET-User/{id_user}", nickname = "gETUsers", notes = "Obtiene datos de un usuario", response = Users.class, tags={ "id number", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Users.class),
        @ApiResponse(code = 400, message = "Bad Request    List of supported error codes:    20: Invalid URL parameter value  25: Missing header  26: Invalid header value  27: Missing query-string parameter  28: Invalid query-string parameter value  ", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found    List of supported error codes:    60: Resource not found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not Allowed    List of supported error codes:    61: Method not allowed", response = Error.class),
        @ApiResponse(code = 422, message = "Unprocessable entity Functional error    List of supported error codes:    11: Functional Error", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error    List of supported error codes:    1: Internal error", response = Error.class) })
    @RequestMapping(value = "/users/{id_user}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Users> gETUsers(@ApiParam(value = "Id de Usuario.",required=true) @PathVariable("id_user") String idUser);

}
